// MPI. Операции с коммуникаторами. Перенумерация процессов.

// Разобраться с новыми функциями, объяснить выполнение программы.
// В функции MPI_Comm_split заменить параметр color на (rank % 2), (rank % 3), посмотреть на сколько групп
// разбиваются процессы, в зависимости от заданного признака разделения на группы. Измените параметр
// так, чтобы процессы разбились на количество групп, которое соответствует вашему варианту - 8.

#include "mpi.h"
#include <iostream>

int main(int argc, char **argv) {
	MPI_Init(&argc, &argv);
	
	int rank, size;
	MPI_Comm_size(MPI_COMM_WORLD, &size);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);

	MPI_Comm comm_revs;
// • comm - родительский коммуникатор
// • color - признак разделения на группы
// • key - параметр, определяющий нумерацию в новых группах
// • OUT newcomm - новый коммуникатор
// Функция расщепляет группу, связанную с родительским коммуникатором, на непересекающиеся подгруппы
// по одной на каждое значение признака подгруппы color. Значение color должно быть неотрицательным.
// Каждая подгруппа содержит процессы с одним и тем же значением color. Параметр key управляет
// упорядочиванием внутри новых групп: меньшему значению key соответствует меньшее значение
// идентификатора процесса. В случае равенства параметра key для нескольких процессов упорядочивание
// выполняется в соответствии с порядком в родительской группе.
	MPI_Comm_split(MPI_COMM_WORLD, rank % 8, size - rank, &comm_revs);
	
	int rank1;
	MPI_Comm_rank(comm_revs, &rank1);

	// Вывести на экран rank и rank1
	std::cout << "rank = " << rank << " "
			  << " rank1 = " << rank1 << std::endl; 
	
	MPI_Comm_free(&comm_revs);
	MPI_Finalize();
}