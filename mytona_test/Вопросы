Вопрос 1:

int main(int argc, char** argv) {
	
	// error: dynamically allocated int with value 30
	// = new int[30];
	int array = new int(30);

	for (size_t i = 0; i < 30; ++i) {
		array[i] = i;
	}

	// error: skip delete[] array;
	
	return 0;
}

Вопрос 2:
class A {
	public:
		void f1() {
			++a;
		}

		void f2() {
			++b;
		}

	private:
		int a;
		static int b;
};
int A::b = 0x7FFF;
int main(int argc, char** argv) {
	A* b; // error = new A;
	b->f2();
	b->f1();

	delete b;
	return 0;
}


Вопрос 3:

Вызов функции f неоднозначен из-за значения по-умолчанию. 
Можно либо убрать значение по-умолчанию, либо переменовать функции. 

void f(int a = 0) {
	//some code
}

void f() {
	//some code
}

Вопрос 4:
Какое максимальное и минимальное значение может вернуть функция?

В функции ошибка : 	expected initializer before ‘+=’ token
	int result += rand()

int someFunc() {
	srand(time(NULL));
	int result = 0;
	for(int i = 0; i < 100; ++i) {
		result += rand() % 2;
	}

	return result;
}

Если убрать int:
Минимальное значение будет 0, если все rand() будут четными, а
максимальное будет 100, если все rand() будут нечетными. 

Eсли заменить += на =, то возращаемое значение всегда будет 0.